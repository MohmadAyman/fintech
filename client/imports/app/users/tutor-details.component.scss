

// .circle-container {
//     position: relative;
//     width: 24em;
//     height: 24em;
//     padding: 2.8em;
//     /*2.8em = 2em*1.4 (2em = half the width of a link with img, 1.4 = sqrt(2))*/
//     border: dashed 1px;
//     border-radius: 50%;
//     margin: 1.75em auto 0;
// }
// .circle-container a {
//     display: block;
//     position: absolute;
//     top: 50%; left: 50%;
//     width: 4em; height: 4em;
//     margin: -2em;
// }
// .circle-container img { display: block; width: 100%; }
// .deg0 { transform: translate(12em); } /* 12em = half the width of the wrapper */
// .deg30 { transform: rotate(30deg) translate(12em) rotate(-30deg); }
// .deg60 { transform: rotate(60deg) translate(12em) rotate(-60deg); }
// .deg90 { transform: rotate(90deg) translate(12em) rotate(-90deg); }
// .deg120 { transform: rotate(120deg) translate(12em) rotate(-120deg); }
// .deg150 { transform: rotate(150deg) translate(12em) rotate(-150deg); }
// .deg180 { transform: translate(-12em); }
// .deg210 { transform: rotate(210deg) translate(12em) rotate(-210deg); }
// .deg240 { transform: rotate(240deg) translate(12em) rotate(-240deg); }
// .deg270 { transform: rotate(270deg) translate(12em) rotate(-270deg); }
// .deg300 { transform: rotate(300deg) translate(12em) rotate(-300deg); }
// .deg330 { transform: rotate(330deg) translate(12em) rotate(-330deg); }
// .container .row {margin:20px;text-align:center;}
// .container .row img {margin:0 20px;}

/// Mixin to put items on a circle
/// [1] - Allows children to be absolutely positioned
/// [2] - Allows the mixin to be used on a list
/// [3] - In case box-sizing: border-box has been enabled
/// [4] - Allows any type of direct children to be targeted
/// 
/// @param {Integer} $nb-items - Number or items
/// @param {Length} $circle-size - Container size
/// @param {Length} $item-size - Item size
/// @param {String | false} $class-for-IE - Base class name for old IE
@mixin distribute-on-circle( 
  $nb-items,
  $circle-size,
  $item-size,
  $class-for-IE: false
) {
  $half-item: ($item-size / 2);
  $half-parent: ($circle-size / 2);
  
  position: relative; /* 1 */
  width:  $circle-size;
  height: $circle-size;
  padding: 0;
  border-radius: 50%; 
  list-style: none; /* 2 */ 
  box-sizing: content-box; /* 3 */ 
  
  > * { /* 4 */
    display: block;
    position: absolute;
    top:  50%; 
    left: 50%;
    width:  $item-size;
    height: $item-size;
    margin: -$half-item;
  }
  
  $angle: (360 / $nb-items);
  $rot: 0;

  @for $i from 1 through $nb-items {
    @if not $class-for-IE {
      > :nth-of-type(#{$i}) {
        transform: rotate($rot * 1deg) translate($half-parent) rotate($rot * -1deg);
      }
    } @else {
      > .#{$class-for-IE}#{$i} {
        // If CSS transforms are not supported
        $mt: sin($rot * pi() / 180) * $half-parent - $half-item;
        $ml: cos($rot * pi() / 180) * $half-parent - $half-item;
        margin: $mt 0 0 $ml;
      }
    }

    $rot: ($rot + $angle);
  }
}

.circle-container {
  @include distribute-on-circle(12, 20em, 6em, false); 
  margin: 5em auto 0;
  // border: solid 5px tomato;
}

.circle-container img { 
  display: block; 
  width: 100%; 
  border-radius: 50%;
  filter: grayscale(100%);

  &:hover {
    filter: grayscale(0);
  }
}